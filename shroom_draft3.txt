# Import the necessary libraries
import pandas as pd



# Define a data structure for mushroom information
class Mushroom:
    def __init__(self,name, description, habitat, seasons, is_poisonous):
        self.name = name
        self.description = description
        self.habitat = habitat
        self.seasons = seasons
        self.is_poisonous = is_poisonous

# Create a list of mushrooms with relevant information
mushrooms = [
    Mushroom(
        name="almond_mushroom",
        description="n/a",
        habitat="n/a",
        seasons=["Spring", "Summer", "Fall"],
        is_poisonous="n/a"
    ),
    Mushroom(
        name="Mushroom2",
        description="Description of Mushroom2.",
        habitat="Habitat2",
        seasons=["Spring", "Summer"],
        is_poisonous=True
        ,
   

    # Add more mushrooms with their information
]mushrooms_kentucky = [
    additional_mushrooms = [
    {
        'Name': 'Honey Fungus',
        'Description': 'Cluster-forming fungus with honey-colored caps',
        'Habitat': 'Woodlands and forests',
        'Growing_Seasons': ['All year'],
        'Is_Poisonous': True  # Note: Some species are edible, but some can be toxic.
    },
    {
        'Name': "Dryad’s Saddle",
        'Description': 'Large, fan-shaped mushroom with brown scales',
        'Habitat': 'Deciduous trees',
        'Growing_Seasons': ['April', 'May', 'June', 'July', 'August'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Morel Mushrooms',
        'Description': 'Distinctive honeycomb appearance with a hollow stem',
        'Habitat': 'Woodlands and grassy areas',
        'Growing_Seasons': ['Spring'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Chanterelles',
        'Description': 'Golden-yellow mushrooms with a funnel shape',
        'Habitat': 'Woodlands and mossy areas',
        'Growing_Seasons': ['Summer', 'Fall'],
        'Is_Poisonous': False
    },
    {
        'Name': "Lion’s Mane",
        'Description': 'White, shaggy appearance resembling a lion’s mane',
        'Habitat': 'Deciduous trees',
        'Growing_Seasons': ['Late summer', 'Fall'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Yellowfoot Mushrooms',
        'Description': 'Small mushrooms with yellow caps and stems',
        'Habitat': 'Woodlands and grassy areas',
        'Growing_Seasons': ['Late summer'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Common Bonnet Mushroom',
        'Description': 'Small to medium-sized mushroom with a conical cap',
        'Habitat': 'Woodlands and grassy areas',
        'Growing_Seasons': ['All year'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Hedgehog Mushrooms',
        'Description': 'Fungi with spines instead of gills on the underside',
        'Habitat': 'Woodlands',
        'Growing_Seasons': ['Fall'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Oyster Mushrooms',
        'Description': 'Oyster-shaped mushrooms with a broad cap',
        'Habitat': 'Woodlands and on trees',
        'Growing_Seasons': ['All year'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Pear-shaped Puffball',
        'Description': 'Small, pear-shaped mushroom that releases spores when mature',
        'Habitat': 'Grassy areas',
        'Growing_Seasons': ['Fall'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Chicken of the Woods',
        'Description': 'Bright orange shelf-like fungus',
        'Habitat': 'Deciduous trees',
        'Growing_Seasons': ['Late August', 'September', 'October'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Turkey-tail Mushrooms',
        'Description': 'Colorful turkey tail mushroom',
        'Habitat': 'Dead trees and logs',
        'Growing_Seasons': ['All year'],
        'Is_Poisonous': False
    },
    {
        'Name': 'Velvet Foot',
        'Description': 'Dark-colored mushroom with a velvety stem',
        'Habitat': 'Woodlands and on decaying wood',
        'Growing_Seasons': ['All year'],
        'Is_Poisonous': False
    }
]

# You can print the combined dictionary to inspect it
all_mushrooms = mushrooms_kentucky + additional_mushrooms
print(all_mushrooms)

# Function to display information about a mushroom
def display_mushroom_info(mushroom):
    print(f"Name: {mushroom.name}")
    print(f"Description: {mushroom.description}")
    print(f"Habitat: {mushroom.habitat}")
    print(f"Growing Seasons: {' '.join(mushroom.seasons)}")
    print(f"Is Poisonous: {'Yes' if mushroom.is_poisonous else 'No'}")

# Function to find mushrooms by season
def find_mushrooms_by_season(season):
    matching_mushrooms = [mushroom for mushroom in mushrooms if season in mushroom.seasons]
    return matching_mushrooms

# Main program
if __name__ == "__main__":
    # Sample code to display information about a specific mushroom
    # Example: display_mushroom_info(mushrooms[0])
    
    # Sample code to find mushrooms that grow in a specific season
    # Example: spring_mushrooms = find_mushrooms_by_season("Spring")
    # for mushroom in spring_mushrooms:
    #     display_mushroom_info(mushroom)
    
    # You can add more functionality to this program, like searching by name or habitat, etc.

    
    "bash"
        
    "pip install python"
    "pip install matplotlib seaborn"

import pandas as pd
import matplotlib.pyplot as plt


# Assuming you have a DataFrame with your mushroom data
# You should load your data into a DataFrame

# Example DataFrame:
data = {
    'Name': ['Mushroom1', 'Mushroom2', 'Mushroom3', 'Mushroom4'],
    'Season': ['Spring', 'Summer', 'Fall', 'Spring'],
    'Location': ['Forest', 'Field', 'Forest', 'Field'],
    'IsPoisonous': [False, True, False, True]
}

df = pd.DataFrame(data)

# Bar graph for times of harvest
season_counts = df['Season'].value_counts()
plt.figure(figsize=(8, 6))
pd.barplot(x=season_counts.index, y=season_counts.values)
plt.title('Mushroom Harvest Times')
plt.xlabel('Season')
plt.ylabel('Count')
plt.show()

# Pie chart for locations
location_counts = df['Location'].value_counts()
plt.figure(figsize=(8, 8))
plt.pie(location_counts, labels=location_counts.index, autopct='%1.1f%%')
plt.title('Mushroom Locations')
plt.show()

# Bar graph for poisonings
poison_counts = df['IsPoisonous'].value_counts()
plt.figure(figsize=(6, 6))
pd.barplot(x=poison_counts.index, y=poison_counts.values)
plt.title('Poisonous vs. Edible Mushrooms')
plt.xlabel('Is Poisonous')
plt.ylabel('Count')
plt.show()

# Check for any connections between variables (requires numeric data)
# You might want to add more numerical data for this part
correlation_matrix = df.corr()
plt.figure(figsize=(8, 6))
pd.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Matrix')
plt.show()